{
    "openapi": "3.1.0",
    "info": {
        "title": "Widget Demo Dynamic Service",
        "description": "The ServiceWidgetDemo is a KBase SDK-compatible dynamic service for demonstrating\nthe ability to provide widgets in a dynamic service.\n",
        "termsOfService": "https://www.kbase.us/about/terms-and-conditions-v2/",
        "contact": {
            "name": "KBase, Lawrence Berkeley National Laboratory, DOE",
            "url": "https://www.kbase.us/",
            "email": "engage@kbase.us"
        },
        "license": {
            "name": "The MIT License",
            "url": "https://github.com/kbase/kb_sdk/blob/develop/LICENSE.md"
        },
        "version": "0.1.0"
    },
    "paths": {
        "/status": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "Get Status",
                "description": "Get Service Status\n\nWith no parameters, this endpoint returns the current status of the service. The status code itself\nis always \"ok\". Other information includes the current time, and the start time.\n\nIt can be used as a healthcheck, for basic latency performance (as it makes no\ni/o or other high-latency calls), or for time synchronization (as it returns the current time).",
                "operationId": "get_status_status_get",
                "responses": {
                    "200": {
                        "description": "Successfully returns the service status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusResponseInput"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rcsb-annotations/{ref}": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "Get Rcsb Annotations",
                "description": "Get RCSB Annotations from a Genome",
                "operationId": "get_rcsb_annotations_rcsb_annotations__ref__get",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Ref"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "KBase auth token",
                            "title": "Authorization"
                        },
                        "description": "KBase auth token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Get Rcsb Annotations Rcsb Annotations  Ref  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/docs": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "Docs",
                "description": "Get API Documentation\n\nProvides a web interface to the auto-generated API docs.",
                "operationId": "docs_docs_get",
                "responses": {
                    "200": {
                        "description": "Successfully returned the api docs",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/widgets/media-viewer": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "Get Widgets Media Viewer",
                "description": "Get API Documentation\n\nProvides a web interface to the auto-generated API docs.",
                "operationId": "get_widgets_media_viewer_widgets_media_viewer_get",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "A KBase object ref (path)",
                            "title": "Ref"
                        },
                        "description": "A KBase object ref (path)"
                    },
                    {
                        "name": "kbase_session",
                        "in": "cookie",
                        "required": true,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "KBase auth token",
                            "title": "Kbase Session"
                        },
                        "description": "KBase auth token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Jinja Demo Successfully rendered",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/widgets/protein-structures-viewer": {
            "get": {
                "tags": [
                    "misc"
                ],
                "summary": "Get Widgets Protein Structures Viewer",
                "description": "Get API Documentation\n\nProvides a web interface to the auto-generated API docs.",
                "operationId": "get_widgets_protein_structures_viewer_widgets_protein_structures_viewer_get",
                "parameters": [
                    {
                        "name": "ref",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "A KBase object ref (path)",
                            "title": "Ref"
                        },
                        "description": "A KBase object ref (path)"
                    },
                    {
                        "name": "kbase_session",
                        "in": "cookie",
                        "required": true,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "KBase auth token",
                            "title": "Kbase Session"
                        },
                        "description": "KBase auth token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Jinja Demo Successfully rendered",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "StatusResponseInput": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "time": {
                        "type": "integer",
                        "title": "Time"
                    },
                    "initial_time": {
                        "type": "integer",
                        "title": "Initial Time"
                    },
                    "start_time": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Time"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "time",
                    "initial_time"
                ],
                "title": "StatusResponse"
            },
            "StatusResponseOutput": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "time": {
                        "type": "integer",
                        "title": "Time"
                    },
                    "initial_time": {
                        "type": "integer",
                        "title": "Initial Time"
                    },
                    "start_time": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Time"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "time",
                    "initial_time",
                    "start_time"
                ],
                "title": "StatusResponse"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    },
    "tags": [
        {
            "name": "misc",
            "description": "Miscellaneous operations"
        }
    ]
}